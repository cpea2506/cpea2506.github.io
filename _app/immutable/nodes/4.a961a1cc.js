import{s as S,f as I,u as q,g as G,h as L,c as F,k as b,n as U}from"../chunks/scheduler.1ff1837f.js";import{S as P,i as R,g as m,m as f,s as x,h as C,j as E,n as h,f as d,c as k,k as g,a as T,B as y,o as w,d as $,t as j,r as z,u as J,v as K,w as M,H as N,e as O,I as Q}from"../chunks/index.86ab406b.js";import{g as V,a as D}from"../chunks/spread.8a54911c.js";function W(n){let s,l,a,o,B,t,p,u,i;const v=n[3].default,c=I(v,n,n[2],null);return{c(){s=m("article"),l=m("h1"),a=f(n[0]),o=x(),B=m("p"),t=f("Created: "),p=f(n[1]),u=x(),c&&c.c(),this.h()},l(e){s=C(e,"ARTICLE",{class:!0});var r=E(s);l=C(r,"H1",{class:!0});var A=E(l);a=h(A,n[0]),A.forEach(d),o=k(r),B=C(r,"P",{class:!0});var _=E(B);t=h(_,"Created: "),p=h(_,n[1]),_.forEach(d),u=k(r),c&&c.l(r),r.forEach(d),this.h()},h(){g(l,"class","mb-2 text-yellow"),g(B,"class","text-green mb-4 pb-2 post-card-border"),g(s,"class","max-w-screen-md mx-4 sm:mx-auto my-2 sm:my-6 prose prose-one-monokai")},m(e,r){T(e,s,r),y(s,l),y(l,a),y(s,o),y(s,B),y(B,t),y(B,p),y(s,u),c&&c.m(s,null),i=!0},p(e,[r]){(!i||r&1)&&w(a,e[0]),(!i||r&2)&&w(p,e[1]),c&&c.p&&(!i||r&4)&&q(c,v,e,e[2],i?L(v,e[2],r,null):G(e[2]),null)},i(e){i||($(c,e),i=!0)},o(e){j(c,e),i=!1},d(e){e&&d(s),c&&c.d(e)}}}function X(n,s,l){let{$$slots:a={},$$scope:o}=s,{title:B}=s,{date:t}=s;return n.$$set=p=>{"title"in p&&l(0,B=p.title),"date"in p&&l(1,t=p.date),"$$scope"in p&&l(2,o=p.$$scope)},[B,t,o,a]}class Y extends P{constructor(s){super(),R(this,s,X,W,S,{title:0,date:1})}}function Z(n){let s,l=`<pre class="shiki one-monokai" style="background-color: #1e1e1e; color: #bbbbbb" rust="true"><div class="language-id">rust</div><div class='code-container'><code><div class='line'><span style="color: #E06C75">use</span><span style="color: #BBBBBB"> avent</span><span style="color: #E06C75">::</span><span style="color: #BBBBBB">get_solution;</span></div><div class='line'><span style="color: #E06C75">use</span><span style="color: #BBBBBB"> structopt</span><span style="color: #E06C75">::</span><span style="color: #61AFEF">StructOpt</span><span style="color: #BBBBBB">;</span></div><div class='line'></div><div class='line'><span style="color: #BBBBBB">#[derive(</span><span style="color: #61AFEF">StructOpt</span><span style="color: #BBBBBB">)]</span></div><div class='line'><span style="color: #56B6C2">struct</span><span style="color: #BBBBBB"> </span><span style="color: #61AFEF">Cli</span><span style="color: #BBBBBB"> &#123;</span></div><div class='line'><span style="color: #BBBBBB">    #[structopt(help </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #E5C07B">"AOC day"</span><span style="color: #BBBBBB">, default_value </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #E5C07B">"1"</span><span style="color: #BBBBBB">)]</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #ABB2BF">day</span><span style="color: #E06C75">:</span><span style="color: #BBBBBB"> </span><span style="color: #61AFEF">u8</span><span style="color: #BBBBBB">,</span></div><div class='line'></div><div class='line'><span style="color: #BBBBBB">    #[structopt(short, long, help </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #E5C07B">"Uses example file provided by AOC"</span><span style="color: #BBBBBB">)]</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #ABB2BF">example</span><span style="color: #E06C75">:</span><span style="color: #BBBBBB"> </span><span style="color: #61AFEF">bool</span><span style="color: #BBBBBB">,</span></div><div class='line'></div><div class='line'><span style="color: #BBBBBB">    #[structopt(short, long, help </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #E5C07B">"Gets all solutions for all AOC days"</span><span style="color: #BBBBBB">)]</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #ABB2BF">all</span><span style="color: #E06C75">:</span><span style="color: #BBBBBB"> </span><span style="color: #61AFEF">bool</span><span style="color: #BBBBBB">,</span></div><div class='line'><span style="color: #BBBBBB">&#125;</span></div><div class='line'></div><div class='line'><span style="color: #E06C75">fn</span><span style="color: #BBBBBB"> </span><span style="color: #98C379">main</span><span style="color: #BBBBBB">() &#123;</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #56B6C2">let</span><span style="color: #BBBBBB"> </span><span style="color: #ABB2BF">day_count</span><span style="color: #BBBBBB"> </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #C678DD">0</span><span style="color: #BBBBBB">;</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #56B6C2">let</span><span style="color: #BBBBBB"> </span><span style="color: #ABB2BF">args</span><span style="color: #BBBBBB"> </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #61AFEF">Cli</span><span style="color: #E06C75">::</span><span style="color: #98C379">from_args</span><span style="color: #BBBBBB">();</span></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #56B6C2">let</span><span style="color: #BBBBBB"> </span><span style="color: #ABB2BF">main_file</span><span style="color: #BBBBBB"> </span><span style="color: #E06C75">=</span><span style="color: #BBBBBB"> </span><span style="color: #E06C75">if</span><span style="color: #BBBBBB"> </span><span style="color: #ABB2BF">args</span><span style="color: #E06C75">.</span><span style="color: #BBBBBB">example &#123; </span><span style="color: #E5C07B">"example"</span><span style="color: #BBBBBB"> &#125; </span><span style="color: #E06C75">else</span><span style="color: #BBBBBB"> &#123; </span><span style="color: #E5C07B">"input"</span><span style="color: #BBBBBB"> &#125;;</span></div><div class='line'></div><div class='line'><span style="color: #BBBBBB">    </span><span style="color: #E06C75">if</span><span style="color: #BBBBBB"> </span><span style="color: #ABB2BF">args</span><span style="color: #E06C75">.</span><span style="color: #BBBBBB">all &#123;</span></div><div class='line'><span style="color: #BBBBBB">        (</span><span style="color: #C678DD">1</span><span style="color: #E06C75">..=</span><span style="color: #ABB2BF">day_count</span><span style="color: #BBBBBB">)</span><span style="color: #E06C75">.</span><span style="color: #98C379">for_each</span><span style="color: #BBBBBB">(</span><span style="color: #E06C75">|</span><span style="color: #ABB2BF">d</span><span style="color: #E06C75">|</span><span style="color: #BBBBBB"> </span><span style="color: #98C379">get_solution</span><span style="color: #BBBBBB">(</span><span style="color: #ABB2BF">main_file</span><span style="color: #BBBBBB">, </span><span style="color: #ABB2BF">d</span><span style="color: #BBBBBB">));</span></div><div class='line'><span style="color: #BBBBBB">    &#125; </span><span style="color: #E06C75">else</span><span style="color: #BBBBBB"> &#123;</span></div><div class='line'><span style="color: #BBBBBB">        </span><span style="color: #98C379">get_solution</span><span style="color: #BBBBBB">(</span><span style="color: #ABB2BF">main_file</span><span style="color: #BBBBBB">, </span><span style="color: #ABB2BF">args</span><span style="color: #E06C75">.</span><span style="color: #BBBBBB">day);</span></div><div class='line'><span style="color: #BBBBBB">    &#125;</span></div><div class='line'><span style="color: #BBBBBB">&#125;</span></div></code></div></pre>`,a;return{c(){s=new N(!1),a=O(),this.h()},l(o){s=Q(o,!1),a=O(),this.h()},h(){s.a=a},m(o,B){s.m(l,o,B),T(o,a,B)},p:U,d(o){o&&(d(a),s.d())}}}function ss(n){let s,l;const a=[n[0],H];let o={$$slots:{default:[Z]},$$scope:{ctx:n}};for(let B=0;B<a.length;B+=1)o=F(o,a[B]);return s=new Y({props:o}),{c(){z(s.$$.fragment)},l(B){J(s.$$.fragment,B)},m(B,t){K(s,B,t),l=!0},p(B,[t]){const p=t&1?V(a,[t&1&&D(B[0]),t&0&&D(H)]):{};t&2&&(p.$$scope={dirty:t,ctx:B}),s.$set(p)},i(B){l||($(s.$$.fragment,B),l=!0)},o(B){j(s.$$.fragment,B),l=!1},d(B){M(s,B)}}}const H={title:"Rust Code",description:"Test Rust code",date:"12/08/2022"};function Bs(n,s,l){return n.$$set=a=>{l(0,s=F(F({},s),b(a)))},s=b(s),[s]}class os extends P{constructor(s){super(),R(this,s,Bs,ss,S,{})}}export{os as component};
